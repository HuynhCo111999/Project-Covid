<!--   Core JS Files   -->
<script src="/js/core/popper.min.js"></script>
<script src="/js/core/bootstrap.min.js"></script>
<script src="/js/plugins/perfect-scrollbar.min.js"></script>
<script src="/js/plugins/smooth-scrollbar.min.js"></script>
<script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
        var options = {
            damping: '0.5'
        }
        Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
</script>
<!-- Github buttons -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
<!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
<script src="/js/material-dashboard.min.js?v=3.0.0"></script>
<script src="/js/material-dashboard.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk="
    crossorigin="anonymous"></script>
<script src="https://code.jquery.com/ui/1.13.0/jquery-ui.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/dataTables.material.min.js"></script>
<script src="/js/index.js"></script>
<script src="/js/province.js"></script>
<script>
    var editModal = $('#ModalEditLocation');
    editModal.on('shown.bs.modal',function(e){
        $('#edit-name-input').val($(e.relatedTarget).attr("data-name"));
        $('#edit-capacity-input').val($(e.relatedTarget).attr("data-capacity"));
        $('#edit-current-input').val($(e.relatedTarget).attr("data-current"));
        $('#edit-location-form').attr("action",`/admin/update-location/${$(e.relatedTarget).attr("data-id")}`);
    })
    const validateAdd = () => {
        const current_input = $('#add-current-input');
        const name_input = $('#add-name-input');
        const capacity_input = $('#add-capacity-input');
        current_input.parent().removeClass("is-invalid");
        name_input.parent().removeClass("is-invalid");
        capacity_input.parent().removeClass("is-invalid");
        if(name_input.val() === "") {
            $('#errmsg').html("Vui lòng nhập tên địa điểm.")
            name_input.parent().addClass("is-invalid");
            return false;
        }
        if(capacity_input.val() === "") {
            $('#errmsg').html("Vui lòng sức chứa địa điểm.")
            capacity_input.parent().addClass("is-invalid");
            return false;
        }
        if(current_input.val() === "") {
            $('#errmsg').html("Vui lòng nhập số lượng tiếp nhận hiện tại của địa điểm.")
            current_input.parent().addClass("is-invalid");
            return false;
        }

        var current = parseInt(current_input.val());
        var capacity = parseInt($('#add-capacity-input').val());
        if(current > capacity) {
            $('#errmsg').html("Số lượng tiếp nhận hiện tại không thể lớn hơn sức chứa.")
            current_input.parent().addClass("is-invalid");
            return false;
        }
        return true;
    }
    const validateEdit = () => {
        const current_input = $('#edit-current-input');
        const name_input = $('#edit-name-input');
        const capacity_input = $('#edit-capacity-input');
        current_input.parent().removeClass("is-invalid");
        name_input.parent().removeClass("is-invalid");
        capacity_input.parent().removeClass("is-invalid");
        if(name_input.val() === "") {
            $('#errmsg2').html("Vui lòng nhập tên địa điểm.")
            name_input.parent().addClass("is-invalid");
            return false;
        }
        if(capacity_input.val() === "") {
            $('#errmsg2').html("Vui lòng sức chứa địa điểm.")
            capacity_input.parent().addClass("is-invalid");
            return false;
        }
        if(current_input.val() === "") {
            $('#errmsg2').html("Vui lòng nhập số lượng tiếp nhận hiện tại của địa điểm.")
            current_input.parent().addClass("is-invalid");
            return false;
        }
        
        var current = parseInt(current_input.val());
        var capacity = parseInt($('#edit-capacity-input').val());
        if(current > capacity) {
            $('#errmsg2').html("Số lượng tiếp nhận hiện tại không thể lớn hơn sức chứa.")
            current_input.parent().addClass("is-invalid");
            return false;
        }
        return true;
    }
    $(".modal").on("hidden.bs.modal", function() {
        $("input").val("");
        $(".input-group-outline").removeClass("is-filled");
    });
</script>