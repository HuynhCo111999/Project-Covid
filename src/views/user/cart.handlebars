<div class="d-flex justify-content-end mb-3">
    <a href="/user/buy-necessity-combo" type="button" class="btn bg-gradient-primary btn-block mx-3">Tiếp tục mua hàng</a>
</div>

<div class="modal fade" id="debit" tabindex="-1" role="dialog" aria-labelledby="exampleModalSignTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 style="text-align:center" class="modal-title font-weight-normal" id="exampleModalLabel">
                    GHI NỢ
                </h3>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body p-0">
                <div class="card-body pb-3">
                    totalAmount: {{totalAmount}}
                    <p class="text-danger" id="errmsg"></p>
                    <button onclick="handleClickDebit({{userId}}, {{username}}, {{totalAmount}})" class="btn bg-gradient-primary">Ghi nợ</button>
                    <button type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Hủy</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="payment" tabindex="-1" role="dialog" aria-labelledby="exampleModalSignTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 style="text-align:center" class="modal-title font-weight-normal" id="exampleModalLabel">
                    THANH TOÁN
                </h3>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body p-0">
                <div class="card-body pb-3">
                    totalAmount: {{totalAmount}}
                    <p class="text-danger" id="paymsg"></p>
                    <button onclick="handlePayment({{userId}}, {{username}},{{totalAmount}})" class="btn bg-gradient-primary">Ghi nợ</button>
                    <button type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Hủy</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ConfirmPayment" tabindex="-1" role="dialog" aria-labelledby="exampleModalSignTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 style="text-align:center" class="modal-title font-weight-normal" id="exampleModalLabel">
                    XÁC NHẬN THANH TOÁN
                </h3>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body p-0">
                <div class="card-body pb-3">
                    <div class="col-12">
                        <p>Sao chép token và xác nhận</p>
                    </div>
                    <div class="col-12">
                        <span id="token-payment"></span>
                    </div>
                    <form role="form text-left" id="add-location-form" >
                        <div class="input-group input-group-outline my-3">
                            <label class="form-label">Token Recharge</label>
                            <input type="text" class="form-control" name="token-recharge" id="token-recharge">
                        </div>
                    </form>
                    <p class="text-danger" id="msg"></p>
                </div>
            </div>
            <div class="modal-footer">
                <button onclick="confirmPayment({{username}})" class="btn bg-gradient-primary">Xác nhận</button>
                <button type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ConfirmDebit" tabindex="-1" role="dialog" aria-labelledby="exampleModalSignTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 style="text-align:center" class="modal-title font-weight-normal" id="exampleModalLabel">
                    XÁC NHẬN GHI NỢ
                </h3>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body p-0">
                <div class="card-body pb-3">
                    <div class="col-12">
                        <p>Sao chép token và xác nhận</p>
                    </div>
                    <div class="col-12">
                        <span id="token-debit"></span>
                    </div>
                    <form role="form text-left" id="add-location-form" >
                        <div class="input-group input-group-outline my-3">
                            <label class="form-label">Token Recharge</label>
                            <input type="text" class="form-control" name="token-recharge" id="token-recharge">
                        </div>
                    </form>
                    <p class="text-danger" id="msg"></p>
                </div>
            </div>
            <div class="modal-footer">
                <button onclick="confirmDebit({{username}})" class="btn bg-gradient-primary">Xác nhận</button>
                <button type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>


<form method="POST" action="/user/order" name="formCart">
<div class="row">
    <div class="col-12">
        <div class="card my-4">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                <div class="bg-gradient-primary shadow-primary border-radius-lg py-2 text-center">
                    <h5 class="text-white text-capitalize pt-2">DANH SÁCH CÁC GÓI NHU YẾU PHẨM</h5>
                </div>
                {{#if failureMessage}}
                <h5 class="text-center mt-4 mb-0 text-danger">{{failureMessage}}</h5>
                {{/if}}    
                {{#if failureMessage2}}
                <h5 class="text-center mt-4 mt-0 text-danger">{{failureMessage2}}</h5>
                {{/if}} 
                {{#each failureMessageString}}  
                <h5 class="text-center mt-4 mt-0 text-danger">{{this}}</h5>
                {{/each}}     
            </div>
            {{#if failureMessage2}}
            {{else}}
            <div class="card-body px-0 pb-2">
                <div class="table-responsive p-0">
                    <table id="userTable" class="table align-items-center mb-0" style="table-layout: fixed;">
                        <thead>
                            <tr>
                                <th class="text-uppercase text-secondary text-md font-weight-bolder text-center table-header">
                                    STT</th>
                                <th class="text-uppercase text-secondary text-md font-weight-bolder text-center w-20 table-header">
                                    Tên gói nhu yếu phẩm</th> 
                                <th class="text-uppercase text-secondary text-md font-weight-bolder text-center w-25 table-header">
                                    Mô tả</th>
                                <th class="text-uppercase text-secondary text-md font-weight-bolder text-center w-10 table-header">
                                    Đơn giá</th>
                                <th class="text-uppercase text-secondary text-md font-weight-bolder text-center w-15 table-header">
                                    Số lượng</th>
                                <th class="text-uppercase text-secondary text-md font-weight-bolder text-center w-12 table-header">
                                    Thành tiền</th>
								<th></th>
                            </tr>
                        </thead>
                        <tbody id="tableBody" class="necessityCarts">
                            {{#each carts}}   
                            <tr class="necessityCart">
                                <td>
                                    <div class="d-flex px-4 py-1 justify-content-center">
                                        <h6 class="mb-0 text-md" style="white-space: normal;">{{sum @index 1}}</h6>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex px-4 py-1 justify-content-start">
                                        <h6 class="mb-0 text-md" style="white-space: normal;">{{this.name}}</h6>
                                    </div>
                                </td>
                                <td>
                                    {{#each this.necessities}}                                   
                                    <div class="d-flex px-4 py-1 justify-content-start">
                                        <h6 class="mb-0 text-md" style="white-space: normal;">{{this.quantity_necessity}} {{this.unit_of_measurement}} {{this.name_necessity}}</h6>
                                    </div>    
                                    {{/each}}  
                                </td>
                                <td>
                                    <div class="d-flex px-4 py-1 justify-content-start">
                                        <h6 class="mb-0 text-md mx-auto priceCombo" id="{{this.price}}" style="white-space: normal;">{{this.price}}đ</h6>
                                    </div>
                                </td>
                                <td> 
                                    <div class="d-flex px-4 py-1 justify-content-start">   
                                        <h6 class="mb-0 text-md mx-auto">
                                            <form id="formIncrese">
                                                <div class="value-button" id="decrease" onclick="decreaseValue('number-{{this.idCombo}}')" value="Decrease Value">-</div>
                                                <input type="number" id="number" readonly class="number-{{this.idCombo}}" value="{{this.quantity}}"/>
                                                <div class="value-button" id="increase" onclick="increaseValue('number-{{this.idCombo}}', {{this.sales_limit}})" value="Increase Value">+</div>
                                            </form>
                                            <input type="hidden" class="inputHidden" value="{{this.quantity}}" name="combo-{{this.idCombo}}"/>
                                        </h6>
                                    </div>    
                                </td>
                                <td>
                                    <div class="d-flex px-4 py-1 justify-content-start">
                                        <h6 class="mb-0 text-md mx-auto amountCombo" style="white-space: normal;">{{this.amount}}đ</h6>
                                    </div>
                                </td>
                                <td>
                                    <a href="/user/cart/delete/{{this.idCombo}}" class="btn btn-danger px-3 py-2 me-1 btn-del mx-3"><i class="fas fa-trash-alt"></i> Xóa</a>
                                </td>
                            </tr>
                            {{/each}} 
                        </tbody>
                    </table>
                </div>
            </div>
            {{/if}}
        </div>
    </div>
</div>

{{#if failureMessage2}}
{{else}}
<div class="d-flex justify-content-end mb-3">
    <p class="btn bg-gradient-secondary btn-block amountAllCombo mx-3">Tổng tiền thanh toán: {{totalAmount}}đ</p>
</div>
<div class="d-flex justify-content-end mb-3">
    <div class="d-flex justify-content-end mb-3">
        <button type="button" class="btn bg-gradient-primary btn-block" data-bs-toggle="modal"
            data-bs-target="#debit">
            GHI NỢ
        </button>
    </div>
    <div class="d-flex justify-content-end mb-3">
        <button type="button" class="btn bg-gradient-primary btn-block" data-bs-toggle="modal"
            data-bs-target="#payment">
            THANH TOÁN NGAY
        </button>
    </div>
</div>
{{/if}}
</form>

<script src="/js/core/jquery-3.6.0.min.js"></script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
        let dataMain = null;

        const handleClickDebit = (id, username, temp) => {
            console.log("handleClickDebit: ", id, temp);
            if(!temp) {
                $("#errmsg").text("Không có tiền để ghi nợ");
                return;
            }
            const money = Number(temp);
            if(money <= 0) {
                $("#errmsg").text("Số tiền phải lớn hơn 0.")
                return;
            }
            fetch('https://localhost:3001/user/getUserByName', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    username: username
                })
            }).then(response => 
                response.json()
            ).then(data => {
                if(data.success) {
                    const data = {
                        money: money,
                        position: 'RECHARGE',
                        status: 'START',
                        userId: data.data.id
                    }
                    fetch(`https://localhost:3001/credit/recharge`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data)
                    }).then(response => 
                        response.json())
                    .then(data => {
                        if(data.success) {
                            $('#debit').modal('hide');
                            $('#ConfirmDebit').modal('show');
                            $("#token-debit").text(data.data.tokenpayment);
                            dataMain = data.data;
                            console.log("data: ", data);
                        } else {
                            $('#debit').modal('hide');
                            Swal.fire({
                                position: 'center',
                                icon: 'error',
                                title: data.error,
                                showConfirmButton: false,
                                timer: 3000
                            })
                        }
                    });
                } else {
                    $('#debit').modal('hide');
                    Swal.fire({
                        position: 'center',
                        icon: 'error',
                        title: data.error,
                        showConfirmButton: false,
                        timer: 3000
                    })
                }
            })
        } 


        const handlePayment = (id, username ,temp) => {
            
            console.log("handleClickDebit: ", id, temp);
            if(!temp) {
                $("#paymsg").text("Không có tiền để thanh toán");
                return;
            }
            const money = Number(temp);
            if(money <= 0) {
                $("#paymsg").text("Số tiền phải lớn hơn 0.")
                return;
            }
            fetch('https://localhost:3001/user/getUserByName', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    username: username
                })
            }).then(response => 
                response.json()
            ).then(data => {
                if(data.success) {
                    const data = {
                        money: money,
                        position: 'PAYMENT',
                        status: 'START',
                        userId: data.data.id
                    }
                    fetch(`https://localhost:3001/credit/payment`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data)
                    }).then(response => 
                        response.json())
                    .then(data => {
                        if(data.success) {
                            $('#payment').modal('hide');
                            $('#ConfirmPayment').modal('show');
                            $("#token-payment").text(data.data.tokenpayment);
                            dataMain = data.data;
                            console.log("data: ", data);
                        } else {
                            $('#exampleModalSignUp').modal('hide');
                            Swal.fire({
                                position: 'center',
                                icon: 'error',
                                title: data.error,
                                showConfirmButton: false,
                                timer: 3000
                            })
                        }
                    });
                } else {
                    $('#debit').modal('hide');
                    Swal.fire({
                        position: 'center',
                        icon: 'error',
                        title: data.error,
                        showConfirmButton: false,
                        timer: 3000
                    })
                }
            })
        }

        const confirmDebit = (username) => {
            const temp = $("#token-recharge").val();
                if(!temp) {
                    $("#msg").text("Vui lòng nhập số tiền.")
                    return;
                }
                fetch('https://localhost:3001/user/getUserByName', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        username: username
                    })
                }).then(response => 
                    response.json()
                ).then(data => {
                    if(data.success) {
                        const data = {
                            token: temp,
                            userId: data.data.id,
                            postion: 'DEBIT',
                            money: dataMain.money
                        }

                        fetch(`https://localhost:3001/credit/identify`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data)
                        }).then(response => 
                            response.json())
                        .then(data => {
                            if(data.success) {
                                $('#ConfirmDebit').modal('hide');
                                Swal.fire({
                                    position: 'center',
                                    icon: 'success',
                                    title: 'Update sucesss',
                                    showConfirmButton: false,
                                    timer: 3000
                                })
                                console.log("data: ", data);
                            } else {
                                $('#ConfirmDebit').modal('hide');
                                Swal.fire({
                                    position: 'center',
                                    icon: 'error',
                                    title: data.error,
                                    showConfirmButton: false,
                                    timer: 3000
                                })
                            }
                        });
                    } else {
                        $('#debit').modal('hide');
                        Swal.fire({
                            position: 'center',
                            icon: 'error',
                            title: data.error,
                            showConfirmButton: false,
                            timer: 3000
                        })
                    }
                })
            }


        const confirmPayment = (username) => {
            const temp = $("#token-recharge").val();
            if(!temp) {
                $("#msg").text("Vui lòng nhập số tiền.")
                return;
            }
            fetch('https://localhost:3001/user/getUserByName', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    username: username
                })
            }).then(response => 
               response.json()
             ).then(data => {
                if(data.success) {
                    const data = {
                        token: temp,
                        userId: id,
                        postion: 'PAYMENT',
                        money: dataMain.money
                    }

                    fetch(`https://localhost:3001/credit/identify`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data)
                    }).then(response => 
                        response.json())
                    .then(data => {
                        if(data.success) {
                            $('#ConfirmPayment').modal('hide');
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Update sucesss',
                                showConfirmButton: false,
                                 timer: 3000
                            })
                            console.log("data: ", data);
                         } else {
                            $('#ConfirmPayment').modal('hide');
                            Swal.fire({
                                position: 'center',
                                icon: 'error',
                                title: data.error,
                                showConfirmButton: false,
                                timer: 3000
                            })
                        }
                    });
                } else {
                    $('#debit').modal('hide');
                    Swal.fire({
                         position: 'center',
                        icon: 'error',
                        title: data.error,
                        showConfirmButton: false,
                        timer: 3000
                    })
                }
            })
        }

        function getParent(element, selector) {
            while (element.parentElement) {
                if (element.parentElement.matches(selector)) {
                    return element.parentElement;
                }
                element = element.parentElement;
            }
        }

        function increaseValue(idNumber, sales_limit) {
            let inputElement = document.querySelector(`.${idNumber}`);
            let trElement = getParent(inputElement, ".necessityCart");
            let amountElement = trElement.querySelector(".amountCombo");
            let priceElement = trElement.querySelector(".priceCombo");
            let value = parseInt(inputElement.value, 10);

            value = isNaN(value) ? 1 : value;
            let maxSales = parseInt(sales_limit) - 1;
            value > maxSales ? value = maxSales : '';
            value++;
            let newAmount = parseInt(priceElement.id) * value;
            inputElement.value = value;
            amountElement.innerHTML = `${newAmount}đ`;

            let h6Element = getParent(inputElement, "h6");
            let inputHidden = h6Element.querySelector(".inputHidden");
            inputElement.setAttribute("value", value);
            document.forms['formCart'][inputHidden.name].value = value;

            let necessityCarts = document.querySelectorAll(".necessityCart");
            let amountAllCombo = document.querySelector(".amountAllCombo");

            let totalAmount = 0;
            Array.from(necessityCarts).forEach(function(necessityCart) {
                let priceCombo =  parseInt(necessityCart.querySelector(".priceCombo").id);
                let quantity = parseInt(necessityCart.querySelector('input').value);
                totalAmount += priceCombo * quantity;             
            });
            
            amountAllCombo.innerHTML = `Tổng tiền thanh toán: ${totalAmount}đ`;
        }         
        
        function decreaseValue(idNumber) {
            let inputElement = document.querySelector(`.${idNumber}`);
            let trElement = getParent(inputElement, ".necessityCart");
            let amountElement = trElement.querySelector(".amountCombo");
            let priceElement = trElement.querySelector(".priceCombo");
            let value = parseInt(inputElement.value, 10);

            value = isNaN(value) ? 1 : value;
            value < 2 ? value = 2 : '';
            value--;
            let newAmount = parseInt(priceElement.id) * value;
            inputElement.value = value;
            amountElement.innerHTML = `${newAmount}đ`;

            let h6Element = getParent(inputElement, "h6");
            let inputHidden = h6Element.querySelector(".inputHidden");
            inputElement.setAttribute("value", value);
            document.forms['formCart'][inputHidden.name].value = value;
            
            let necessityCarts = document.querySelectorAll(".necessityCart");
            let amountAllCombo = document.querySelector(".amountAllCombo");

            let totalAmount = 0;
            Array.from(necessityCarts).forEach(function(necessityCart) {
                let priceCombo =  parseInt(necessityCart.querySelector(".priceCombo").id);
                let quantity = parseInt(necessityCart.querySelector('input').value);
                totalAmount += priceCombo * quantity;
            });
            
            amountAllCombo.innerHTML = `Tổng tiền thanh toán: ${totalAmount}đ`;
        }


        document.addEventListener("DOMContentLoaded", function(){
            let formElement = document.forms['formCart'];

            let debitElement = document.querySelector("#debit");
            let paymentElement = document.querySelector("#payment");

            debitElement.onclick = function() {
                let type = "debit";
                formElement.onsubmit = function(e) {
                    //e.preventDefault();
                    formElement.action = "/user/order/" + type;
                    console.log("formElement.action: ", formElement.action);
                }
            }

            paymentElement.onclick = function() {
                let type = "payment";
                formElement.onsubmit = function(e) {
                    //e.preventDefault();
                    formElement.action = "/user/order/" + type;
                    console.log("formElement.action: ", formElement.action);

                }
            }
        });

</script> 